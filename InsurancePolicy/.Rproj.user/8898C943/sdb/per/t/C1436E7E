{
    "collab_server" : "",
    "contents" : "# Developed by Mojdeh Shirazi-Manesh-22/06/2017\n# To practice and learn RShiny\n# Further Improvement: using ggplot2\n\n##Load packages\nlibrary(shiny)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(magrittr)\nlibrary(shinydashboard)\n\n#-----------\ntable<-read.table(\"data.txt\")\n#-----------\n\ntable_socialClass<-table[,25:29]\n#Considering the max value of social class columns as the customer social class.\nsocClass<-colnames(table_socialClass)[apply(table_socialClass,1,which.max)]\ntable<-mutate(table,SocialClass=socClass)\n#-----------\ntable_education<-table[,16:18]\n#Considering the column with max value among education related columns as the education level.\neducation<-colnames(table_education)[apply(table_education,1,which.max)]\ntable<-mutate(table,EducLevel=education)\n#-----------\n\n# values of Customer main type (L2), social class, education level and income level\ncusMaintype<-c(\"Successful hedonists\",\"Driven Growers\",\"Average Family\",\"Career Loners\",\"Living well\",\n               \"Cruising Seniors\",\"Retired and Religeous\",\"Family with grown ups\",\"Conservative families\",\"Farmers\")\ncusSocialCls<-c(\"Class A\",\"Class B1\",\"Class B2\",\"Class C\",\"Class D\")\ncusEducLvl<-c(\"High level\",\"Medium level\",\"Lower level\")\ncusIncLvl<-c(\"L0\",\"L1\",\"L2\",\"L3\",\"L4\",\"L5\",\"L6\",\"L7\",\"L8\",\"L9\")\n#--------------------------------------------------------------------------\n\nui<-fluidPage(\n  titlePanel(\"Insurance Policies\"),\n  \n  sidebarPanel(\n    \n    selectInput(\"policy\", label = h3(\"Select an Insurance Policy\"), \n                choices = list(\"Car\"=\"V68\",\n                               \"Van\"=\"V69\",\n                               \"Motorcycle/Scooter\"=\"V70\",\n                               \"Lorry\"=\"V71\",\n                               \"Trailer\"=\"V72\",\n                               \"Tractor\"=\"V73\",\n                               \"Agricultural Machines\"=\"V74\",\n                               \"Moped\"=\"V75\",\n                               \"Life Insurance\"=\"V76\",\n                               \"Private Accident insurance\"=\"V77\",\n                               \"Family Accidents\"=\"V78\",\n                               \"Disability\"=\"V79\",\n                               \"Fire\"=\"V80\",\n                               \"Surfboard\"=\"V81\",\n                               \"Boat\"=\"V82\",\n                               \"Bicycle\"=\"V83\",\n                               \"Property Insurance\"=\"V84\",\n                               \"Social Security\"=\"V85\",\n                               \"Mobile Home\"=\"V86\"\n                               \n                               \n                )\n    )),\n  \n  \n  mainPanel( \n    fluidRow(\n      box(plotOutput(\"bar_cusmain\", height = 400)),\n      box(plotOutput( \"bar_socclass\", height = 400)),\n      box(plotOutput(\"bar_education\", height = 400)),\n      box(plotOutput(\"scatter_income\", height = 400)))\n  )\n)  \n############################################################################\n\nserver<-function(input, output) {\n  \n  # based on customer main type\n  filteredPolicy_cusmain<-reactive({\n    table%>%\n      filter(table[input$policy]>0)%>%\n      group_by(.,V5)%>%\n      summarise(.,n())%>%\n      rename(.,Nu_cusmain=`n()`) \n  })\n  \n  output$bar_cusmain<-renderPlot({\n    par(mar=c(4,11,4,4)) \n    a<-TRUE\n    namesarg<-cusMaintype\n    u<-unique(filteredPolicy_cusmain()$V5)\n    if (length(u)<10){ \n      a<-(1:10 %in% u)\n      \n      namesarg<-namesarg [which(a==TRUE)]\n    }\n    \n    barplot(filteredPolicy_cusmain()$Nu_cusmain,main=\"Customer Main Type\",horiz=TRUE,\n            names.arg=namesarg,\n            las=1,\n            xlab=\"# of customers\",  \n            col=\"deepskyblue3\"\n    )}) \n  #----------------------------------------------------------------------------\n  # based on social classes\n  filteredPolicy_socclass<-reactive({\n    table%>%\n      filter(table[input$policy]>0)%>%\n      group_by(.,SocialClass)%>%\n      summarise(.,n())%>%\n      rename(.,Nu_socclass=`n()`)\n  })\n  \n  \n  output$bar_socclass<-renderPlot({\n    a<-TRUE\n    namesarg<-cusSocialCls\n    u<-unique(filteredPolicy_socclass()$SocialClass)\n    if (length(u)<5){ \n      a<-(c(\"V25\",\"V26\",\"V27\",\"V28\",\"V29\") %in% u)\n      \n      namesarg<-namesarg [which(a==TRUE)]\n    }\n    \n    slices <- filteredPolicy_socclass()$Nu_socclass/sum(filteredPolicy_socclass()$Nu_socclass)\n    lbls <- namesarg\n    pie(slices, labels = lbls, main=\"Customer Social Class\")\n  })\n  #----------------------------------------------------------------------------\n  # based on education level\n  filteredPolicy_educ<-reactive({\n    table%>%\n      filter(table[input$policy]>0)%>%\n      group_by(.,EducLevel)%>%\n      summarise(.,n())%>%\n      rename(.,Nu_educ=`n()`)\n  })\n  \n  output$bar_education<-renderPlot({\n    a<-TRUE\n    namesarg<-cusEducLvl\n    u<-unique(filteredPolicy_educ()$EducLevel)\n    if (length(u)<3){ \n      a<-(c(\"V16\",\"V17\",\"V18\") %in% u)\n      \n      namesarg<-namesarg [which(a==TRUE)]\n    }\n    \n    barplot(filteredPolicy_educ()$Nu_educ,main=\"Customer Education level\",\n            names.arg=namesarg,\n            las=1,\n            ylab=\"# of customers\" , \n            col=\"palevioletred2\"\n    )}) \n  \n  #-----------------------------------------------------------------------------\n  # based on average income level\n  filteredPolicy_inc<-reactive({\n    table%>%\n      filter(table[input$policy]>0)%>%\n      group_by(.,V42)%>%\n      summarise(.,n())%>%\n      rename(.,Nu_inc=`n()`)\n  })\n  output$scatter_income<-renderPlot({\n    par(mar=c(4,11,4,4)) \n    a<-TRUE\n    namesarg<-cusIncLvl\n    # cat(namesarg)\n    u<-unique(filteredPolicy_inc()$V42)\n    if (length(u)<10){ \n      a<-(0:9 %in% u)\n      \n      namesarg<-namesarg [which(a==TRUE)]\n    }\n    y<-filteredPolicy_inc()$Nu_inc\n    l<-length(namesarg)\n\n    plot(0:(l-1),y,xaxt = 'n',type=\"b\", xlab=\"Income Level\", lty=2, pch=19, col=\"blue\", ylab=\"# of Customers\",\n         main=\"Customer Income Level\" )\n    axis(side=1,at=0:(l-1),labels=namesarg)\n    \n  }) \n}\n\nshinyApp(ui=ui,server=server)\n",
    "created" : 1506699831774.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "911148874",
    "id" : "C1436E7E",
    "lastKnownWriteTime" : 1506700600,
    "last_content_update" : 1506700600472,
    "path" : "C:/Users/Mojdeh/Desktop/github/A-simple-shiny-app/Insurance policy/app.R",
    "project_path" : "app.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}